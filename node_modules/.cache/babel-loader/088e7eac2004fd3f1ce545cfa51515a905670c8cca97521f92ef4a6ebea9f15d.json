{"ast":null,"code":"var _jsxFileName = \"C:\\\\developeWeb\\\\FrontEndReact\\\\src\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport PeliculaCard from \"./PeliculaCard\";\nimport SearchIcon from \"./search.svg\";\nimport { API_URL } from \"./App.jsx\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [peliculas, setPeliculas] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n  const buscarPeliculas = async titulo => {\n    try {\n      const response = await fetch(`${API_URL}?s=${titulo}`);\n      if (!response.ok) {\n        throw new Error('La solicitud de búsqueda de películas falló');\n      }\n      const data = await response.json();\n      if (data && data.Search) {\n        // Verifica si se encontraron películas en la respuesta\n        setPeliculas(data.Search);\n      } else {\n        // Si no se encontraron películas, establece el estado en un array vacío\n        setPeliculas([]);\n      }\n    } catch (error) {\n      console.error('Error al buscar películas:', error);\n      // Maneja el error de manera apropiada\n    }\n  };\n\n  // Llama a las funciones al cargar la página\n  useEffect(() => {\n    buscarPeliculas('');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Buscar peliculas por t\\xEDtulo\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: SearchIcon,\n        alt: \"Buscar\",\n        onClick: () => buscarPeliculas(searchTerm)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), (peliculas === null || peliculas === void 0 ? void 0 : peliculas.length) > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: peliculas.map(pelicula => /*#__PURE__*/_jsxDEV(PeliculaCard, {\n        pelicula: pelicula\n      }, pelicula.peliculaId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 29\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No hay peliculas encontradas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true);\n}\n_s(Home, \"oXtZwo2Domcf1J4Ju+iEgYTXEYU=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useEffect","useState","PeliculaCard","SearchIcon","API_URL","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","peliculas","setPeliculas","searchTerm","setSearchTerm","buscarPeliculas","titulo","response","fetch","ok","Error","data","json","Search","error","console","children","className","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","length","map","pelicula","peliculaId","_c","$RefreshReg$"],"sources":["C:/developeWeb/FrontEndReact/src/Home.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport PeliculaCard from \"./PeliculaCard\";\nimport SearchIcon from \"./search.svg\";\nimport { API_URL } from \"./App.jsx\";\n\nfunction Home(){\n    const [peliculas, setPeliculas] = useState([]);\n    const [searchTerm, setSearchTerm] = useState('');\n\n    const buscarPeliculas = async (titulo) => {\n        try {\n            const response = await fetch(`${API_URL}?s=${titulo}`);\n            if (!response.ok) {\n                throw new Error('La solicitud de búsqueda de películas falló');\n            }\n    \n            const data = await response.json();\n            if (data && data.Search) {\n                // Verifica si se encontraron películas en la respuesta\n                setPeliculas(data.Search);\n            } else {\n                // Si no se encontraron películas, establece el estado en un array vacío\n                setPeliculas([]);\n            }\n        } catch (error) {\n            console.error('Error al buscar películas:', error);\n            // Maneja el error de manera apropiada\n        }\n    }\n    \n\n    // Llama a las funciones al cargar la página\n    useEffect(() => {\n        buscarPeliculas('');\n    }, []);\n\n    return (\n        <>\n            <div className=\"search\">\n                <input placeholder=\"Buscar peliculas por título\" value={searchTerm} onChange={(e) => setSearchTerm(e.target.value)} />\n                <img src={SearchIcon} alt=\"Buscar\" onClick={() => buscarPeliculas(searchTerm)} />\n            </div>\n\n            {peliculas?.length > 0\n                ? (\n                    <div className=\"container\">\n                        {peliculas.map((pelicula) => (\n                            <PeliculaCard pelicula={pelicula} key={pelicula.peliculaId} />\n                        ))}\n                    </div>\n                ) :\n                (\n                    <div className=\"empty\">\n                        <h2>No hay peliculas encontradas</h2>\n                    </div>\n                )\n            }\n        </>\n    );\n}\n\nexport default Home;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,UAAU,MAAM,cAAc;AACrC,SAASC,OAAO,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpC,SAASC,IAAIA,CAAA,EAAE;EAAAC,EAAA;EACX,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMc,eAAe,GAAG,MAAOC,MAAM,IAAK;IACtC,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEd,OAAQ,MAAKY,MAAO,EAAC,CAAC;MACtD,IAAI,CAACC,QAAQ,CAACE,EAAE,EAAE;QACd,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;MAClE;MAEA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClC,IAAID,IAAI,IAAIA,IAAI,CAACE,MAAM,EAAE;QACrB;QACAX,YAAY,CAACS,IAAI,CAACE,MAAM,CAAC;MAC7B,CAAC,MAAM;QACH;QACAX,YAAY,CAAC,EAAE,CAAC;MACpB;IACJ,CAAC,CAAC,OAAOY,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD;IACJ;EACJ,CAAC;;EAGD;EACAxB,SAAS,CAAC,MAAM;IACZe,eAAe,CAAC,EAAE,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIT,OAAA,CAAAE,SAAA;IAAAkB,QAAA,gBACIpB,OAAA;MAAKqB,SAAS,EAAC,QAAQ;MAAAD,QAAA,gBACnBpB,OAAA;QAAOsB,WAAW,EAAC,gCAA6B;QAACC,KAAK,EAAEhB,UAAW;QAACiB,QAAQ,EAAGC,CAAC,IAAKjB,aAAa,CAACiB,CAAC,CAACC,MAAM,CAACH,KAAK;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtH9B,OAAA;QAAK+B,GAAG,EAAElC,UAAW;QAACmC,GAAG,EAAC,QAAQ;QAACC,OAAO,EAAEA,CAAA,KAAMxB,eAAe,CAACF,UAAU;MAAE;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChF,CAAC,EAEL,CAAAzB,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAE6B,MAAM,IAAG,CAAC,gBAEdlC,OAAA;MAAKqB,SAAS,EAAC,WAAW;MAAAD,QAAA,EACrBf,SAAS,CAAC8B,GAAG,CAAEC,QAAQ,iBACpBpC,OAAA,CAACJ,YAAY;QAACwC,QAAQ,EAAEA;MAAS,GAAMA,QAAQ,CAACC,UAAU;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAChE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,gBAGN9B,OAAA;MAAKqB,SAAS,EAAC,OAAO;MAAAD,QAAA,eAClBpB,OAAA;QAAAoB,QAAA,EAAI;MAA4B;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CACR;EAAA,eAEP,CAAC;AAEX;AAAC1B,EAAA,CAtDQD,IAAI;AAAAmC,EAAA,GAAJnC,IAAI;AAwDb,eAAeA,IAAI;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}