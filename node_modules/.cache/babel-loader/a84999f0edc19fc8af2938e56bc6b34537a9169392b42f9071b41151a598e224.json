{"ast":null,"code":"var _jsxFileName = \"C:\\\\developeWeb\\\\FrontEndReact\\\\src\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport PeliculaCard from \"./PeliculaCard\";\nimport SearchIcon from \"./search.svg\";\nimport { API_URL } from \"./App.jsx\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [peliculas, setPeliculas] = useState([]);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  //Busca una pelicula\n  const buscarPeliculas = async titulo => {\n    try {\n      const response = await fetch(`${API_URL}?s=${titulo}`);\n      if (!response.ok) {\n        throw new Error('Error al buscar películas: ' + response.statusText);\n      }\n      const data = await response.json();\n      if (data && data.Search) {\n        setPeliculas(data.Search);\n      } else {\n        setPeliculas([]);\n      }\n    } catch (error) {\n      console.error(error);\n      // Manejar el error apropiadamente, por ejemplo, mostrar un mensaje al usuario\n    }\n  };\n\n  // Llama a las funciones al cargar la página\n  useEffect(() => {\n    buscarPeliculas('');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Buscar peliculas por t\\xEDtulo\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: SearchIcon,\n        alt: \"Buscar\",\n        onClick: () => buscarPeliculas(searchTerm)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), (peliculas === null || peliculas === void 0 ? void 0 : peliculas.length) > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: peliculas.map(pelicula => /*#__PURE__*/_jsxDEV(PeliculaCard, {\n        pelicula: pelicula\n      }, pelicula.peliculaId, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 29\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"empty\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"No hay peliculas encontradas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true);\n}\n_s(Home, \"oXtZwo2Domcf1J4Ju+iEgYTXEYU=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["useEffect","useState","PeliculaCard","SearchIcon","API_URL","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","peliculas","setPeliculas","searchTerm","setSearchTerm","buscarPeliculas","titulo","response","fetch","ok","Error","statusText","data","json","Search","error","console","children","className","placeholder","value","onChange","e","target","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","length","map","pelicula","peliculaId","_c","$RefreshReg$"],"sources":["C:/developeWeb/FrontEndReact/src/Home.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport PeliculaCard from \"./PeliculaCard\";\nimport SearchIcon from \"./search.svg\";\nimport { API_URL } from \"./App.jsx\";\n\nfunction Home(){\n    const [peliculas, setPeliculas] = useState([]);\n    const [searchTerm, setSearchTerm] = useState('');\n\n    //Busca una pelicula\n    const buscarPeliculas = async (titulo) => {\n        try {\n            const response = await fetch(`${API_URL}?s=${titulo}`);\n            if (!response.ok) {\n                throw new Error('Error al buscar películas: ' + response.statusText);\n            }\n    \n            const data = await response.json();\n            if (data && data.Search) {\n                setPeliculas(data.Search);\n            } else {\n                setPeliculas([]);\n            }\n        } catch (error) {\n            console.error(error);\n            // Manejar el error apropiadamente, por ejemplo, mostrar un mensaje al usuario\n        }\n    }\n    \n\n    // Llama a las funciones al cargar la página\n    useEffect(() => {\n        buscarPeliculas('');\n    }, []);\n\n    return (\n        <>\n            <div className=\"search\">\n                <input placeholder=\"Buscar peliculas por título\" value={searchTerm} onChange={(e) => setSearchTerm(e.target.value)} />\n                <img src={SearchIcon} alt=\"Buscar\" onClick={() => buscarPeliculas(searchTerm)} />\n            </div>\n\n            {peliculas?.length > 0\n                ? (\n                    <div className=\"container\">\n                        {peliculas.map((pelicula) => (\n                            <PeliculaCard pelicula={pelicula} key={pelicula.peliculaId} />\n                        ))}\n                    </div>\n                ) :\n                (\n                    <div className=\"empty\">\n                        <h2>No hay peliculas encontradas</h2>\n                    </div>\n                )\n            }\n        </>\n    );\n}\n\nexport default Home;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}